name: Publish InfoWatt
env:
  api: infowatt
on:
  push:
    branches:
      - main
    paths:
      - apis/infowatt/**
      - apis/defaults.json
      - .github/workflows/infowatt.yaml
jobs:
  docker:
    if: "!contains(github.event.head_commit.message, '[SKIP-CI]')" 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker # see https://stackoverflow.com/a/65362210
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/mock-${{ env.api }}
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: apis/${{ env.api }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Update mock
        run: curl -k https://${{ secrets.APIM_HOST }}:8081/mock/${{ env.api }}/update
  apim:
    if: "!contains(github.event.head_commit.message, '[SKIP-CI]')" 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the git repository
        uses: actions/checkout@v2
      - name: Generate api-config.json
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm i -y
      - run: npx json-merger apis/${{ env.api }}/api-config-tpl.json |jq . > apis/${{ env.api }}/api-config.json
      - name: Publish to APIM
        uses: Axway/presales-apim-cli-action@v0
        env:
          APIM_USER: ${{ secrets.APIM_USER }}
          APIM_PASS: ${{ secrets.APIM_PASS }}
          APIM_HOST: ${{ secrets.APIM_HOST }}
          APIM_PORT: ${{ secrets.APIM_PORT }}
        with:
          command: api import -clientAppsMode replace -c apis/${{ env.api }}/api-config.json
